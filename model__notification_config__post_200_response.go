/*
EZPin Access API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ezpin

import (
	"encoding/json"
)

// checks if the NotificationConfigPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationConfigPost200Response{}

// NotificationConfigPost200Response struct for NotificationConfigPost200Response
type NotificationConfigPost200Response struct {
	// API message
	Detail *string `json:"detail,omitempty"`
	// the status code of notification config
	Code *int32 `json:"code,omitempty"`
}

// NewNotificationConfigPost200Response instantiates a new NotificationConfigPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationConfigPost200Response() *NotificationConfigPost200Response {
	this := NotificationConfigPost200Response{}
	return &this
}

// NewNotificationConfigPost200ResponseWithDefaults instantiates a new NotificationConfigPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationConfigPost200ResponseWithDefaults() *NotificationConfigPost200Response {
	this := NotificationConfigPost200Response{}
	return &this
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *NotificationConfigPost200Response) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationConfigPost200Response) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *NotificationConfigPost200Response) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *NotificationConfigPost200Response) SetDetail(v string) {
	o.Detail = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *NotificationConfigPost200Response) GetCode() int32 {
	if o == nil || IsNil(o.Code) {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationConfigPost200Response) GetCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *NotificationConfigPost200Response) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *NotificationConfigPost200Response) SetCode(v int32) {
	o.Code = &v
}

func (o NotificationConfigPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationConfigPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	return toSerialize, nil
}

type NullableNotificationConfigPost200Response struct {
	value *NotificationConfigPost200Response
	isSet bool
}

func (v NullableNotificationConfigPost200Response) Get() *NotificationConfigPost200Response {
	return v.value
}

func (v *NullableNotificationConfigPost200Response) Set(val *NotificationConfigPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationConfigPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationConfigPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationConfigPost200Response(val *NotificationConfigPost200Response) *NullableNotificationConfigPost200Response {
	return &NullableNotificationConfigPost200Response{value: val, isSet: true}
}

func (v NullableNotificationConfigPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationConfigPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


