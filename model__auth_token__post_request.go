/*
EZPin Access API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ezpin

import (
	"encoding/json"
)

// checks if the AuthTokenPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthTokenPostRequest{}

// AuthTokenPostRequest struct for AuthTokenPostRequest
type AuthTokenPostRequest struct {
	// Client ID provided by EZpin
	ClientId *string `json:"client_id,omitempty"`
	// Secret key provided by EZpin
	SecretKey *string `json:"secret_key,omitempty"`
}

// NewAuthTokenPostRequest instantiates a new AuthTokenPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthTokenPostRequest() *AuthTokenPostRequest {
	this := AuthTokenPostRequest{}
	return &this
}

// NewAuthTokenPostRequestWithDefaults instantiates a new AuthTokenPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthTokenPostRequestWithDefaults() *AuthTokenPostRequest {
	this := AuthTokenPostRequest{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *AuthTokenPostRequest) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthTokenPostRequest) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *AuthTokenPostRequest) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *AuthTokenPostRequest) SetClientId(v string) {
	o.ClientId = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *AuthTokenPostRequest) GetSecretKey() string {
	if o == nil || IsNil(o.SecretKey) {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthTokenPostRequest) GetSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretKey) {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *AuthTokenPostRequest) HasSecretKey() bool {
	if o != nil && !IsNil(o.SecretKey) {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *AuthTokenPostRequest) SetSecretKey(v string) {
	o.SecretKey = &v
}

func (o AuthTokenPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthTokenPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	if !IsNil(o.SecretKey) {
		toSerialize["secret_key"] = o.SecretKey
	}
	return toSerialize, nil
}

type NullableAuthTokenPostRequest struct {
	value *AuthTokenPostRequest
	isSet bool
}

func (v NullableAuthTokenPostRequest) Get() *AuthTokenPostRequest {
	return v.value
}

func (v *NullableAuthTokenPostRequest) Set(val *AuthTokenPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthTokenPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthTokenPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthTokenPostRequest(val *AuthTokenPostRequest) *NullableAuthTokenPostRequest {
	return &NullableAuthTokenPostRequest{value: val, isSet: true}
}

func (v NullableAuthTokenPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthTokenPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


