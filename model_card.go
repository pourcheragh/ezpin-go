/*
EZPin Access API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ezpin

import (
	"encoding/json"
)

// checks if the Card type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Card{}

// Card struct for Card
type Card struct {
	// gift card number
	CardNumber *string `json:"card_number,omitempty"`
	// gift card pin
	PinCode *string `json:"pin_code,omitempty"`
	// link of gift card
	ClaimUrl *string `json:"claim_url,omitempty"`
}

// NewCard instantiates a new Card object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCard() *Card {
	this := Card{}
	return &this
}

// NewCardWithDefaults instantiates a new Card object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardWithDefaults() *Card {
	this := Card{}
	return &this
}

// GetCardNumber returns the CardNumber field value if set, zero value otherwise.
func (o *Card) GetCardNumber() string {
	if o == nil || IsNil(o.CardNumber) {
		var ret string
		return ret
	}
	return *o.CardNumber
}

// GetCardNumberOk returns a tuple with the CardNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Card) GetCardNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CardNumber) {
		return nil, false
	}
	return o.CardNumber, true
}

// HasCardNumber returns a boolean if a field has been set.
func (o *Card) HasCardNumber() bool {
	if o != nil && !IsNil(o.CardNumber) {
		return true
	}

	return false
}

// SetCardNumber gets a reference to the given string and assigns it to the CardNumber field.
func (o *Card) SetCardNumber(v string) {
	o.CardNumber = &v
}

// GetPinCode returns the PinCode field value if set, zero value otherwise.
func (o *Card) GetPinCode() string {
	if o == nil || IsNil(o.PinCode) {
		var ret string
		return ret
	}
	return *o.PinCode
}

// GetPinCodeOk returns a tuple with the PinCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Card) GetPinCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PinCode) {
		return nil, false
	}
	return o.PinCode, true
}

// HasPinCode returns a boolean if a field has been set.
func (o *Card) HasPinCode() bool {
	if o != nil && !IsNil(o.PinCode) {
		return true
	}

	return false
}

// SetPinCode gets a reference to the given string and assigns it to the PinCode field.
func (o *Card) SetPinCode(v string) {
	o.PinCode = &v
}

// GetClaimUrl returns the ClaimUrl field value if set, zero value otherwise.
func (o *Card) GetClaimUrl() string {
	if o == nil || IsNil(o.ClaimUrl) {
		var ret string
		return ret
	}
	return *o.ClaimUrl
}

// GetClaimUrlOk returns a tuple with the ClaimUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Card) GetClaimUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ClaimUrl) {
		return nil, false
	}
	return o.ClaimUrl, true
}

// HasClaimUrl returns a boolean if a field has been set.
func (o *Card) HasClaimUrl() bool {
	if o != nil && !IsNil(o.ClaimUrl) {
		return true
	}

	return false
}

// SetClaimUrl gets a reference to the given string and assigns it to the ClaimUrl field.
func (o *Card) SetClaimUrl(v string) {
	o.ClaimUrl = &v
}

func (o Card) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Card) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CardNumber) {
		toSerialize["card_number"] = o.CardNumber
	}
	if !IsNil(o.PinCode) {
		toSerialize["pin_code"] = o.PinCode
	}
	if !IsNil(o.ClaimUrl) {
		toSerialize["claim_url"] = o.ClaimUrl
	}
	return toSerialize, nil
}

type NullableCard struct {
	value *Card
	isSet bool
}

func (v NullableCard) Get() *Card {
	return v.value
}

func (v *NullableCard) Set(val *Card) {
	v.value = val
	v.isSet = true
}

func (v NullableCard) IsSet() bool {
	return v.isSet
}

func (v *NullableCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCard(val *Card) *NullableCard {
	return &NullableCard{value: val, isSet: true}
}

func (v NullableCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


