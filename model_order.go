/*
EZPin Access API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ezpin

import (
	"encoding/json"

	"github.com/shopspring/decimal"
)

// checks if the Order type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Order{}

// Order struct for Order
type Order struct {
	// id of order
	OrderId *int32 `json:"order_id,omitempty"`
	// * `0` None *`1` email *`2` SMS *`3` WhatsApp
	DeliveryType *int32 `json:"delivery_type,omitempty"`
	// E-mail or Phone/Whatsapp number you want the order to be delivered to.
	Destination *string `json:"destination,omitempty"`
	// *`-1` Reject *`0` Pending *`1` Accept
	Status *int32 `json:"status,omitempty"`
	// status of order
	StatusText *string `json:"status_text,omitempty"`
	// time of order creation
	CreatedTime *string `json:"created_time,omitempty"`
	// terminal id of sub user
	TerminalId *int32 `json:"terminal_id,omitempty"`
	// reference code of order
	ReferenceCode *string `json:"reference_code,omitempty"`
	Product *Product `json:"product,omitempty"`
	// order quantity
	Count *int32 `json:"count,omitempty"`
	// total of product original prices
	TotalFaceValue *decimal.Decimal `json:"total_face_value,omitempty"`
	// sum of activation fees
	TotalFees *decimal.Decimal `json:"total_fees,omitempty"`
	// sum of discounts
	TotalDiscounts *string `json:"total_discounts,omitempty"`
	// total price customer should pay
	TotalCustomerCost *decimal.Decimal `json:"total_customer_cost,omitempty"`
	// is order process completed or not
	IsCompleted *bool `json:"is_completed,omitempty"`
	// link of order cards.
	ShareLink *string `json:"share_link,omitempty"`
}

// NewOrder instantiates a new Order object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrder() *Order {
	this := Order{}
	return &this
}

// NewOrderWithDefaults instantiates a new Order object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderWithDefaults() *Order {
	this := Order{}
	return &this
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *Order) GetOrderId() int32 {
	if o == nil || IsNil(o.OrderId) {
		var ret int32
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetOrderIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *Order) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int32 and assigns it to the OrderId field.
func (o *Order) SetOrderId(v int32) {
	o.OrderId = &v
}

// GetDeliveryType returns the DeliveryType field value if set, zero value otherwise.
func (o *Order) GetDeliveryType() int32 {
	if o == nil || IsNil(o.DeliveryType) {
		var ret int32
		return ret
	}
	return *o.DeliveryType
}

// GetDeliveryTypeOk returns a tuple with the DeliveryType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetDeliveryTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.DeliveryType) {
		return nil, false
	}
	return o.DeliveryType, true
}

// HasDeliveryType returns a boolean if a field has been set.
func (o *Order) HasDeliveryType() bool {
	if o != nil && !IsNil(o.DeliveryType) {
		return true
	}

	return false
}

// SetDeliveryType gets a reference to the given int32 and assigns it to the DeliveryType field.
func (o *Order) SetDeliveryType(v int32) {
	o.DeliveryType = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *Order) GetDestination() string {
	if o == nil || IsNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *Order) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *Order) SetDestination(v string) {
	o.Destination = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Order) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Order) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *Order) SetStatus(v int32) {
	o.Status = &v
}

// GetStatusText returns the StatusText field value if set, zero value otherwise.
func (o *Order) GetStatusText() string {
	if o == nil || IsNil(o.StatusText) {
		var ret string
		return ret
	}
	return *o.StatusText
}

// GetStatusTextOk returns a tuple with the StatusText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetStatusTextOk() (*string, bool) {
	if o == nil || IsNil(o.StatusText) {
		return nil, false
	}
	return o.StatusText, true
}

// HasStatusText returns a boolean if a field has been set.
func (o *Order) HasStatusText() bool {
	if o != nil && !IsNil(o.StatusText) {
		return true
	}

	return false
}

// SetStatusText gets a reference to the given string and assigns it to the StatusText field.
func (o *Order) SetStatusText(v string) {
	o.StatusText = &v
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *Order) GetCreatedTime() string {
	if o == nil || IsNil(o.CreatedTime) {
		var ret string
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCreatedTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *Order) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given string and assigns it to the CreatedTime field.
func (o *Order) SetCreatedTime(v string) {
	o.CreatedTime = &v
}

// GetTerminalId returns the TerminalId field value if set, zero value otherwise.
func (o *Order) GetTerminalId() int32 {
	if o == nil || IsNil(o.TerminalId) {
		var ret int32
		return ret
	}
	return *o.TerminalId
}

// GetTerminalIdOk returns a tuple with the TerminalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTerminalIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TerminalId) {
		return nil, false
	}
	return o.TerminalId, true
}

// HasTerminalId returns a boolean if a field has been set.
func (o *Order) HasTerminalId() bool {
	if o != nil && !IsNil(o.TerminalId) {
		return true
	}

	return false
}

// SetTerminalId gets a reference to the given int32 and assigns it to the TerminalId field.
func (o *Order) SetTerminalId(v int32) {
	o.TerminalId = &v
}

// GetReferenceCode returns the ReferenceCode field value if set, zero value otherwise.
func (o *Order) GetReferenceCode() string {
	if o == nil || IsNil(o.ReferenceCode) {
		var ret string
		return ret
	}
	return *o.ReferenceCode
}

// GetReferenceCodeOk returns a tuple with the ReferenceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetReferenceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceCode) {
		return nil, false
	}
	return o.ReferenceCode, true
}

// HasReferenceCode returns a boolean if a field has been set.
func (o *Order) HasReferenceCode() bool {
	if o != nil && !IsNil(o.ReferenceCode) {
		return true
	}

	return false
}

// SetReferenceCode gets a reference to the given string and assigns it to the ReferenceCode field.
func (o *Order) SetReferenceCode(v string) {
	o.ReferenceCode = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *Order) GetProduct() Product {
	if o == nil || IsNil(o.Product) {
		var ret Product
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetProductOk() (*Product, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *Order) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given Product and assigns it to the Product field.
func (o *Order) SetProduct(v Product) {
	o.Product = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *Order) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *Order) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *Order) SetCount(v int32) {
	o.Count = &v
}

// GetTotalFaceValue returns the TotalFaceValue field value if set, zero value otherwise.
func (o *Order) GetTotalFaceValue() decimal.Decimal {
	if o == nil || IsNil(o.TotalFaceValue) {
		var ret decimal.Decimal
		return ret
	}
	return *o.TotalFaceValue
}

// GetTotalFaceValueOk returns a tuple with the TotalFaceValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTotalFaceValueOk() (*decimal.Decimal, bool) {
	if o == nil || IsNil(o.TotalFaceValue) {
		return nil, false
	}
	return o.TotalFaceValue, true
}

// HasTotalFaceValue returns a boolean if a field has been set.
func (o *Order) HasTotalFaceValue() bool {
	if o != nil && !IsNil(o.TotalFaceValue) {
		return true
	}

	return false
}

// SetTotalFaceValue gets a reference to the given decimal.Decimal and assigns it to the TotalFaceValue field.
func (o *Order) SetTotalFaceValue(v decimal.Decimal) {
	o.TotalFaceValue = &v
}

// GetTotalFees returns the TotalFees field value if set, zero value otherwise.
func (o *Order) GetTotalFees() decimal.Decimal {
	if o == nil || IsNil(o.TotalFees) {
		var ret decimal.Decimal
		return ret
	}
	return *o.TotalFees
}

// GetTotalFeesOk returns a tuple with the TotalFees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTotalFeesOk() (*decimal.Decimal, bool) {
	if o == nil || IsNil(o.TotalFees) {
		return nil, false
	}
	return o.TotalFees, true
}

// HasTotalFees returns a boolean if a field has been set.
func (o *Order) HasTotalFees() bool {
	if o != nil && !IsNil(o.TotalFees) {
		return true
	}

	return false
}

// SetTotalFees gets a reference to the given decimal.Decimal and assigns it to the TotalFees field.
func (o *Order) SetTotalFees(v decimal.Decimal) {
	o.TotalFees = &v
}

// GetTotalDiscounts returns the TotalDiscounts field value if set, zero value otherwise.
func (o *Order) GetTotalDiscounts() string {
	if o == nil || IsNil(o.TotalDiscounts) {
		var ret string
		return ret
	}
	return *o.TotalDiscounts
}

// GetTotalDiscountsOk returns a tuple with the TotalDiscounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTotalDiscountsOk() (*string, bool) {
	if o == nil || IsNil(o.TotalDiscounts) {
		return nil, false
	}
	return o.TotalDiscounts, true
}

// HasTotalDiscounts returns a boolean if a field has been set.
func (o *Order) HasTotalDiscounts() bool {
	if o != nil && !IsNil(o.TotalDiscounts) {
		return true
	}

	return false
}

// SetTotalDiscounts gets a reference to the given string and assigns it to the TotalDiscounts field.
func (o *Order) SetTotalDiscounts(v string) {
	o.TotalDiscounts = &v
}

// GetTotalCustomerCost returns the TotalCustomerCost field value if set, zero value otherwise.
func (o *Order) GetTotalCustomerCost() decimal.Decimal {
	if o == nil || IsNil(o.TotalCustomerCost) {
		var ret decimal.Decimal
		return ret
	}
	return *o.TotalCustomerCost
}

// GetTotalCustomerCostOk returns a tuple with the TotalCustomerCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetTotalCustomerCostOk() (*decimal.Decimal, bool) {
	if o == nil || IsNil(o.TotalCustomerCost) {
		return nil, false
	}
	return o.TotalCustomerCost, true
}

// HasTotalCustomerCost returns a boolean if a field has been set.
func (o *Order) HasTotalCustomerCost() bool {
	if o != nil && !IsNil(o.TotalCustomerCost) {
		return true
	}

	return false
}

// SetTotalCustomerCost gets a reference to the given decimal.Decimal and assigns it to the TotalCustomerCost field.
func (o *Order) SetTotalCustomerCost(v decimal.Decimal) {
	o.TotalCustomerCost = &v
}

// GetIsCompleted returns the IsCompleted field value if set, zero value otherwise.
func (o *Order) GetIsCompleted() bool {
	if o == nil || IsNil(o.IsCompleted) {
		var ret bool
		return ret
	}
	return *o.IsCompleted
}

// GetIsCompletedOk returns a tuple with the IsCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetIsCompletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCompleted) {
		return nil, false
	}
	return o.IsCompleted, true
}

// HasIsCompleted returns a boolean if a field has been set.
func (o *Order) HasIsCompleted() bool {
	if o != nil && !IsNil(o.IsCompleted) {
		return true
	}

	return false
}

// SetIsCompleted gets a reference to the given bool and assigns it to the IsCompleted field.
func (o *Order) SetIsCompleted(v bool) {
	o.IsCompleted = &v
}

// GetShareLink returns the ShareLink field value if set, zero value otherwise.
func (o *Order) GetShareLink() string {
	if o == nil || IsNil(o.ShareLink) {
		var ret string
		return ret
	}
	return *o.ShareLink
}

// GetShareLinkOk returns a tuple with the ShareLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Order) GetShareLinkOk() (*string, bool) {
	if o == nil || IsNil(o.ShareLink) {
		return nil, false
	}
	return o.ShareLink, true
}

// HasShareLink returns a boolean if a field has been set.
func (o *Order) HasShareLink() bool {
	if o != nil && !IsNil(o.ShareLink) {
		return true
	}

	return false
}

// SetShareLink gets a reference to the given string and assigns it to the ShareLink field.
func (o *Order) SetShareLink(v string) {
	o.ShareLink = &v
}

func (o Order) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Order) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !IsNil(o.DeliveryType) {
		toSerialize["delivery_type"] = o.DeliveryType
	}
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusText) {
		toSerialize["status_text"] = o.StatusText
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["created_time"] = o.CreatedTime
	}
	if !IsNil(o.TerminalId) {
		toSerialize["terminal_id"] = o.TerminalId
	}
	if !IsNil(o.ReferenceCode) {
		toSerialize["reference_code"] = o.ReferenceCode
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.TotalFaceValue) {
		toSerialize["total_face_value"] = o.TotalFaceValue
	}
	if !IsNil(o.TotalFees) {
		toSerialize["total_fees"] = o.TotalFees
	}
	if !IsNil(o.TotalDiscounts) {
		toSerialize["total_discounts"] = o.TotalDiscounts
	}
	if !IsNil(o.TotalCustomerCost) {
		toSerialize["total_customer_cost"] = o.TotalCustomerCost
	}
	if !IsNil(o.IsCompleted) {
		toSerialize["is_completed"] = o.IsCompleted
	}
	if !IsNil(o.ShareLink) {
		toSerialize["share_link"] = o.ShareLink
	}
	return toSerialize, nil
}

type NullableOrder struct {
	value *Order
	isSet bool
}

func (v NullableOrder) Get() *Order {
	return v.value
}

func (v *NullableOrder) Set(val *Order) {
	v.value = val
	v.isSet = true
}

func (v NullableOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrder(val *Order) *NullableOrder {
	return &NullableOrder{value: val, isSet: true}
}

func (v NullableOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


