/*
EZPin Access API V2

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ezpin

import (
	"encoding/json"

	"github.com/shopspring/decimal"
)

// checks if the CryptoOrdersPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CryptoOrdersPostRequest{}

// CryptoOrdersPostRequest struct for CryptoOrdersPostRequest
type CryptoOrdersPostRequest struct {
	// ID of Fiat currency
	CurrencyId *int32 `json:"currency_id,omitempty"`
	// ID of Crypto Currency
	CryptoCurrencyId *int32 `json:"crypto_currency_id,omitempty"`
	// The amount you need to exchange from fiat currency to Cryptocurrency
	RequestedPrice *decimal.Decimal `json:"requested_price,omitempty"`
	// A unique UUID v4 reference code must be included in request
	ReferenceCode *string `json:"reference_code,omitempty"`
	// Terminal ID of the sub-users that can be defined in setting section in user panel
	TerminalId *int32 `json:"terminal_id,omitempty"`
	// Pin defined for sub-user
	TerminalPin *int32 `json:"terminal_pin,omitempty"`
}

// NewCryptoOrdersPostRequest instantiates a new CryptoOrdersPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCryptoOrdersPostRequest() *CryptoOrdersPostRequest {
	this := CryptoOrdersPostRequest{}
	return &this
}

// NewCryptoOrdersPostRequestWithDefaults instantiates a new CryptoOrdersPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCryptoOrdersPostRequestWithDefaults() *CryptoOrdersPostRequest {
	this := CryptoOrdersPostRequest{}
	return &this
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise.
func (o *CryptoOrdersPostRequest) GetCurrencyId() int32 {
	if o == nil || IsNil(o.CurrencyId) {
		var ret int32
		return ret
	}
	return *o.CurrencyId
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoOrdersPostRequest) GetCurrencyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrencyId) {
		return nil, false
	}
	return o.CurrencyId, true
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *CryptoOrdersPostRequest) HasCurrencyId() bool {
	if o != nil && !IsNil(o.CurrencyId) {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given int32 and assigns it to the CurrencyId field.
func (o *CryptoOrdersPostRequest) SetCurrencyId(v int32) {
	o.CurrencyId = &v
}

// GetCryptoCurrencyId returns the CryptoCurrencyId field value if set, zero value otherwise.
func (o *CryptoOrdersPostRequest) GetCryptoCurrencyId() int32 {
	if o == nil || IsNil(o.CryptoCurrencyId) {
		var ret int32
		return ret
	}
	return *o.CryptoCurrencyId
}

// GetCryptoCurrencyIdOk returns a tuple with the CryptoCurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoOrdersPostRequest) GetCryptoCurrencyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CryptoCurrencyId) {
		return nil, false
	}
	return o.CryptoCurrencyId, true
}

// HasCryptoCurrencyId returns a boolean if a field has been set.
func (o *CryptoOrdersPostRequest) HasCryptoCurrencyId() bool {
	if o != nil && !IsNil(o.CryptoCurrencyId) {
		return true
	}

	return false
}

// SetCryptoCurrencyId gets a reference to the given int32 and assigns it to the CryptoCurrencyId field.
func (o *CryptoOrdersPostRequest) SetCryptoCurrencyId(v int32) {
	o.CryptoCurrencyId = &v
}

// GetRequestedPrice returns the RequestedPrice field value if set, zero value otherwise.
func (o *CryptoOrdersPostRequest) GetRequestedPrice() decimal.Decimal {
	if o == nil || IsNil(o.RequestedPrice) {
		var ret decimal.Decimal
		return ret
	}
	return *o.RequestedPrice
}

// GetRequestedPriceOk returns a tuple with the RequestedPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoOrdersPostRequest) GetRequestedPriceOk() (*decimal.Decimal, bool) {
	if o == nil || IsNil(o.RequestedPrice) {
		return nil, false
	}
	return o.RequestedPrice, true
}

// HasRequestedPrice returns a boolean if a field has been set.
func (o *CryptoOrdersPostRequest) HasRequestedPrice() bool {
	if o != nil && !IsNil(o.RequestedPrice) {
		return true
	}

	return false
}

// SetRequestedPrice gets a reference to the given decimal.Decimal and assigns it to the RequestedPrice field.
func (o *CryptoOrdersPostRequest) SetRequestedPrice(v decimal.Decimal) {
	o.RequestedPrice = &v
}

// GetReferenceCode returns the ReferenceCode field value if set, zero value otherwise.
func (o *CryptoOrdersPostRequest) GetReferenceCode() string {
	if o == nil || IsNil(o.ReferenceCode) {
		var ret string
		return ret
	}
	return *o.ReferenceCode
}

// GetReferenceCodeOk returns a tuple with the ReferenceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoOrdersPostRequest) GetReferenceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceCode) {
		return nil, false
	}
	return o.ReferenceCode, true
}

// HasReferenceCode returns a boolean if a field has been set.
func (o *CryptoOrdersPostRequest) HasReferenceCode() bool {
	if o != nil && !IsNil(o.ReferenceCode) {
		return true
	}

	return false
}

// SetReferenceCode gets a reference to the given string and assigns it to the ReferenceCode field.
func (o *CryptoOrdersPostRequest) SetReferenceCode(v string) {
	o.ReferenceCode = &v
}

// GetTerminalId returns the TerminalId field value if set, zero value otherwise.
func (o *CryptoOrdersPostRequest) GetTerminalId() int32 {
	if o == nil || IsNil(o.TerminalId) {
		var ret int32
		return ret
	}
	return *o.TerminalId
}

// GetTerminalIdOk returns a tuple with the TerminalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoOrdersPostRequest) GetTerminalIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TerminalId) {
		return nil, false
	}
	return o.TerminalId, true
}

// HasTerminalId returns a boolean if a field has been set.
func (o *CryptoOrdersPostRequest) HasTerminalId() bool {
	if o != nil && !IsNil(o.TerminalId) {
		return true
	}

	return false
}

// SetTerminalId gets a reference to the given int32 and assigns it to the TerminalId field.
func (o *CryptoOrdersPostRequest) SetTerminalId(v int32) {
	o.TerminalId = &v
}

// GetTerminalPin returns the TerminalPin field value if set, zero value otherwise.
func (o *CryptoOrdersPostRequest) GetTerminalPin() int32 {
	if o == nil || IsNil(o.TerminalPin) {
		var ret int32
		return ret
	}
	return *o.TerminalPin
}

// GetTerminalPinOk returns a tuple with the TerminalPin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CryptoOrdersPostRequest) GetTerminalPinOk() (*int32, bool) {
	if o == nil || IsNil(o.TerminalPin) {
		return nil, false
	}
	return o.TerminalPin, true
}

// HasTerminalPin returns a boolean if a field has been set.
func (o *CryptoOrdersPostRequest) HasTerminalPin() bool {
	if o != nil && !IsNil(o.TerminalPin) {
		return true
	}

	return false
}

// SetTerminalPin gets a reference to the given int32 and assigns it to the TerminalPin field.
func (o *CryptoOrdersPostRequest) SetTerminalPin(v int32) {
	o.TerminalPin = &v
}

func (o CryptoOrdersPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CryptoOrdersPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrencyId) {
		toSerialize["currency_id"] = o.CurrencyId
	}
	if !IsNil(o.CryptoCurrencyId) {
		toSerialize["crypto_currency_id"] = o.CryptoCurrencyId
	}
	if !IsNil(o.RequestedPrice) {
		toSerialize["requested_price"] = o.RequestedPrice
	}
	if !IsNil(o.ReferenceCode) {
		toSerialize["reference_code"] = o.ReferenceCode
	}
	if !IsNil(o.TerminalId) {
		toSerialize["terminal_id"] = o.TerminalId
	}
	if !IsNil(o.TerminalPin) {
		toSerialize["terminal_pin"] = o.TerminalPin
	}
	return toSerialize, nil
}

type NullableCryptoOrdersPostRequest struct {
	value *CryptoOrdersPostRequest
	isSet bool
}

func (v NullableCryptoOrdersPostRequest) Get() *CryptoOrdersPostRequest {
	return v.value
}

func (v *NullableCryptoOrdersPostRequest) Set(val *CryptoOrdersPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCryptoOrdersPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCryptoOrdersPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCryptoOrdersPostRequest(val *CryptoOrdersPostRequest) *NullableCryptoOrdersPostRequest {
	return &NullableCryptoOrdersPostRequest{value: val, isSet: true}
}

func (v NullableCryptoOrdersPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCryptoOrdersPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


